{"version":3,"sources":["Static/boltSizeOptionsSAE.js","Static/boltSizeOptionsISO.js","Static/standardOptions.js","Static/boltOptionsSAE.js","Static/boltOptionsISO.js","Static/boltOptionsASTM.js","Static/threadingOptions.js","Components/Store.js","Static/metricProofLoad.js","Static/tpiValues.js","Components/ResultCompAdv.js","Static/threadingOptionsISO.js","Static/lubricationOptionsAdv.js","Components/UserInputAdvanced.js","App.js","serviceWorker.js","index.js"],"names":["boltSizeOptionsSAE","key","text","value","boltSizeOptionsISO","standardOptions","boltOptionsSAE","boltOptionsISO","boltOptionsASTM","threadingOptions","standardContext","React","createContext","gradeContext","sizeContext","threadingContext","lubeContext","customLubeContext","threadsPerInchContext","Store","_ref","children","standard","setStandard","useState","grade","setGrade","size","setSize","threading","setThreading","lube","setLube","customLube","setCustomLube","threadsPerInch","setThreadsPerInch","createElement","Provider","metricProofLoad","tpiValues","ResultCompAdv","props","result","useContext","calcClampForce","proofLoad","parseFloat","grade_num","replace","class","diameter","threadTensileStress","retValue","Math","PI","pow","calcTorque","K","D","F","isNaN","round","threadingOptionsISO","lubricationOptionsAdv","UserInput","search","useLocation","searchParams","URLSearchParams","standardURL","get","gradeURL","sizeURL","lubeURL","customLubeURL","threadsPerInchURL","threadingURL","updateQuery","queryName","updateMethod","has","replaceMe","reg","RegExp","qString","history","push","pathname","Dropdown","onChange","e","options","placeholder","selection","Menu","Message","error","header","content","Input","App","location","advanced","setAdvanced","returnInitialURL","Grid","centered","container","padded","style","padding","Route","exact","path","component","UserInputAdvanced","basename","Boolean","window","hostname","match","ReactDOM","render","StrictMode","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"iQA+BeA,MA/BY,CACvB,CAAEC,IAAK,EAAGC,KAAM,KAAMC,MAAO,QAC7B,CAAEF,IAAK,EAAGC,KAAM,KAAMC,MAAO,QAC7B,CAAEF,IAAK,EAAGC,KAAM,KAAMC,MAAO,QAC7B,CAAEF,IAAK,EAAGC,KAAM,MAAOC,MAAO,OAC9B,CAAEF,IAAK,EAAGC,KAAM,WAAYC,MAAO,OACnC,CAAEF,IAAK,EAAGC,KAAM,YAAaC,MAAO,SACpC,CAAEF,IAAK,EAAGC,KAAM,WAAYC,MAAO,QACnC,CAAEF,IAAK,EAAGC,KAAM,YAAaC,MAAO,SACpC,CAAEF,IAAK,EAAGC,KAAM,WAAYC,MAAO,MACnC,CAAEF,IAAK,EAAGC,KAAM,YAAaC,MAAO,SACpC,CAAEF,IAAK,GAAIC,KAAM,WAAYC,MAAO,QACpC,CAAEF,IAAK,GAAIC,KAAM,WAAYC,MAAO,OACpC,CAAEF,IAAK,GAAIC,KAAM,WAAYC,MAAO,QACpC,CAAEF,IAAK,GAAIC,KAAM,SAAUC,MAAO,KAClC,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,SAC1C,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,QAC1C,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,SAC1C,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,OAC1C,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,QAC1C,CAAEF,IAAK,GAAIC,KAAM,WAAYC,MAAO,KACpC,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,QAC1C,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,OAC1C,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,QAC1C,CAAEF,IAAK,GAAIC,KAAM,WAAYC,MAAO,KACpC,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,QAC1C,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,OAC1C,CAAEF,IAAK,GAAIC,KAAM,iBAAkBC,MAAO,QAC1C,CAAEF,IAAK,GAAIC,KAAM,WAAYC,MAAO,MCXzBC,MAjBY,CACvB,CAAEH,IAAK,EAAGC,KAAM,QAASC,MAAO,OAChC,CAAEF,IAAK,EAAGC,KAAM,QAASC,MAAO,OAChC,CAAEF,IAAK,EAAGC,KAAM,QAASC,MAAO,OAChC,CAAEF,IAAK,EAAGC,KAAM,QAASC,MAAO,OAChC,CAAEF,IAAK,EAAGC,KAAM,QAASC,MAAO,OAChC,CAAEF,IAAK,EAAGC,KAAM,QAASC,MAAO,OAChC,CAAEF,IAAK,EAAGC,KAAM,SAAUC,MAAO,QACjC,CAAEF,IAAK,EAAGC,KAAM,SAAUC,MAAO,QACjC,CAAEF,IAAK,EAAGC,KAAM,SAAUC,MAAO,QACjC,CAAEF,IAAK,EAAGC,KAAM,SAAUC,MAAO,QACjC,CAAEF,IAAK,GAAIC,KAAM,SAAUC,MAAO,QAClC,CAAEF,IAAK,GAAIC,KAAM,SAAUC,MAAO,QAClC,CAAEF,IAAK,GAAIC,KAAM,SAAUC,MAAO,QAClC,CAAEF,IAAK,GAAIC,KAAM,SAAUC,MAAO,SCTvBE,MALS,CACpB,CAAEJ,IAAK,EAAGC,KAAM,WAAYC,MAAO,OACnC,CAAEF,IAAK,EAAGC,KAAM,MAAOC,MAAO,QCKnBG,MAPQ,CACnB,CAAEL,IAAK,EAAGC,KAAM,UAAWC,MAAO,UAClC,CAAEF,IAAK,EAAGC,KAAM,UAAWC,MAAO,UAClC,CAAEF,IAAK,EAAGC,KAAM,UAAWC,MAAO,UAClC,CAAEF,IAAK,EAAGC,KAAM,UAAWC,MAAO,WCQvBI,MAZQ,CACnB,CAAEN,IAAK,EAAGC,KAAM,YAAaC,MAAO,YACpC,CAAEF,IAAK,EAAGC,KAAM,YAAaC,MAAO,YACpC,CAAEF,IAAK,EAAGC,KAAM,YAAaC,MAAO,YACpC,CAAEF,IAAK,EAAGC,KAAM,YAAaC,MAAO,YACpC,CAAEF,IAAK,EAAGC,KAAM,YAAaC,MAAO,YACpC,CAAEF,IAAK,EAAGC,KAAM,YAAaC,MAAO,YACpC,CAAEF,IAAK,EAAGC,KAAM,YAAaC,MAAO,YACpC,CAAEF,IAAK,EAAGC,KAAM,aAAcC,MAAO,aACrC,CAAEF,IAAK,EAAGC,KAAM,aAAcC,MAAO,cCJ1BK,MALS,CACpB,CAAEP,IAAK,EAAGC,KAAM,OAAQC,MAAO,QAC/B,CAAEF,IAAK,EAAGC,KAAM,cAAeC,MAAO,gBCI3BM,MANU,CACrB,CAAER,IAAK,EAAGC,KAAM,SAAUC,MAAO,UACjC,CAAEF,IAAK,EAAGC,KAAM,OAAQC,MAAO,QAC/B,CAAEF,IAAK,EAAGC,KAAM,SAAUC,MAAO,WCD9B,MAAMO,EAAkBC,IAAMC,gBACxBC,EAAeF,IAAMC,gBACrBE,EAAcH,IAAMC,gBACpBG,EAAmBJ,IAAMC,gBACzBI,EAAcL,IAAMC,gBACpBK,EAAoBN,IAAMC,gBAC1BM,EAAwBP,IAAMC,gBA6B5BO,MA3BDC,IAAmB,IAAlB,SAAEC,GAAUD,EACvB,MAAOE,EAAUC,GAAeC,mBAAS,OAClCC,EAAOC,GAAYF,mBAAS,OAC5BG,EAAMC,GAAWJ,mBAAS,OAC1BK,EAAWC,GAAgBN,mBAAS,OACpCO,EAAMC,GAAWR,mBAAS,OAC1BS,EAAYC,GAAiBV,mBAAS,OACtCW,EAAgBC,GAAqBZ,mBAAS,MACrD,OACIb,IAAA0B,cAAC3B,EAAgB4B,SAAQ,CAACnC,MAAO,CAACmB,EAAUC,IACxCZ,IAAA0B,cAACxB,EAAayB,SAAQ,CAACnC,MAAO,CAACsB,EAAOC,IAClCf,IAAA0B,cAACvB,EAAYwB,SAAQ,CAACnC,MAAO,CAACwB,EAAMC,IAChCjB,IAAA0B,cAACtB,EAAiBuB,SAAQ,CAACnC,MAAO,CAAC0B,EAAWC,IAC1CnB,IAAA0B,cAACrB,EAAYsB,SAAQ,CAACnC,MAAO,CAAC4B,EAAMC,IAChCrB,IAAA0B,cAACpB,EAAkBqB,SAAQ,CAACnC,MAAO,CAAC8B,EAAYC,IAC5CvB,IAAA0B,cAACnB,EAAsBoB,SAAQ,CAACnC,MAAO,CAACgC,EAAgBC,IACnDf,UCsXtBkB,MAhZS,CACpB,OAAU,CACN,MAAS,CACL,IAAO,CACH,SAAY,CACR,MAAO,MACP,IAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,OACP,IAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,OACP,IAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,OACP,IAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,OACP,IAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,QACP,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,OACP,IAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,QACP,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,OACP,IAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,OACP,IAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,WAIhB,KAAQ,CACJ,SAAY,CACR,MAAO,OACP,IAAO,OACP,MAAO,OACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,KAAQ,CACJ,SAAY,CACR,MAAO,OACP,IAAO,OACP,MAAO,OACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,aAKxB,KAAQ,CACJ,MAAS,CACL,IAAO,CACH,SAAY,CACR,MAAO,OACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,IAAO,CACH,SAAY,CACR,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,QACR,OAAQ,WAIhB,KAAQ,CACJ,SAAY,CACR,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,WAGhB,KAAQ,CACJ,SAAY,CACR,MAAO,QACP,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,cC/UbC,MAvDG,CACd,OAAU,CACN,OAAQ,GACR,OAAQ,GACR,OAAQ,GACR,OAAQ,GACR,MAAO,GACP,MAAO,GACP,QAAS,GACT,OAAQ,GACR,QAAS,GACT,KAAM,GACN,QAAS,GACT,OAAQ,GACR,MAAO,GACP,OAAQ,EACR,EAAK,EACL,MAAS,EACT,KAAQ,EACR,MAAS,EACT,IAAO,EACP,KAAQ,EACR,EAAK,IACL,KAAQ,KACR,IAAO,EACP,KAAQ,EACR,EAAK,EACL,KAAQ,EACR,IAAO,EACP,KAAQ,EACR,EAAK,GAET,KAAQ,CACJ,OAAQ,GACR,OAAQ,GACR,OAAQ,GACR,OAAQ,GACR,MAAO,GACP,MAAO,GACP,QAAS,GACT,OAAQ,GACR,QAAS,GACT,KAAM,GACN,QAAS,GACT,OAAQ,GACR,MAAO,GACP,OAAQ,GACR,EAAK,GACL,MAAS,GACT,KAAQ,GACR,MAAS,GACT,IAAO,KC0CAC,MApFQC,IACnB,IAAIC,EAAS,KAEb,MAAOrB,GAAYsB,qBAAWlC,IACvBiB,GAAQiB,qBAAW9B,IACnBW,GAASmB,qBAAW/B,IACpBgB,GAAae,qBAAW7B,GA6BzB8B,EAAiBA,KACnB,IAAIC,EAAY,KAChB,GAAiB,QAAbxB,EAEoCwB,EADtB,WAAVrB,EACAsB,WAAWL,EAAMf,MAAQ,KAAmB,KAAoB,KAEjD,WAAVF,EACLsB,WAAWL,EAAMf,MAAQ,IAAkB,KAAoB,KAEhD,WAAVF,EACO,MAGA,SAGf,CAED,IAAIuB,EAAYN,EAAMjB,MAAMwB,QAAQ,QAAS,IAC1CV,GAAmBA,EAAgBV,IAAcU,EAAgBV,GAAWqB,MAAMF,KACjFF,EA9CM,MA8CkBP,EAAgBV,GAAWqB,MAAMF,GAAWG,SAASxB,IAGrF,MAAuB,QAAnBe,EAAMpB,SAA8B,IAAMwB,EA1CtBM,MACxB,IAAIC,EAAW,KAef,MAdiB,QAAb/B,IAEI+B,EADAxB,GAA0B,UAAbA,EACDyB,KAAKC,GAAK,EAAKD,KAAKE,IAAKT,WAAWL,EAAMf,MAAqB,EAAIoB,WAAWP,EAAUX,GAAWF,IAAhD,QAA2D,GAG9G2B,KAAKC,GAAK,EAAKD,KAAKE,IAAKT,WAAWL,EAAMf,MAAqB,EAAIoB,WAAWL,EAAMP,gBAAjC,QAAqD,IASrHkB,GA0BmDD,GAC9C,IAAMN,GAatB,OAHIJ,EAAMf,OACNgB,EATec,MACf,IAAIC,EAAI,KACJC,EAAI,KACJC,EAAIf,IAGR,OAF8Ba,EAAf,eAAfhB,EAAMX,KAA4B,IAAsB,QAAfW,EAAMX,KAAqB,GAAWW,EAAMT,WACrF0B,EAAIZ,WAAWL,EAAMf,MACE,QAAnBe,EAAMpB,SAA8BoC,EAAIC,EAAIC,EAvD/B,UAuDuDF,EAAIC,EAAIC,IAGvEH,IAGT9C,IAAA0B,cAAA,OAAKa,MAAM,aACI,MAAVP,EAAiBhC,IAAA0B,cAAA,UAAI,4BAA0BwB,MAAMlB,GAAU,6EAC1DW,KAAKQ,MAAe,IAATnB,GAAiB,IAA5BW,eAAyDA,KAAKQ,MAAOnB,EAAS,GAAM,KAAQ,IAAO,aAAoBhC,IAAA0B,cAAA,UAC7H1B,IAAA0B,cAAA,SAAG,4JAC2D1B,IAAA0B,cAAA,WAAM,uIACc1B,IAAA0B,cAAA,WAAM,uCClFrF0B,MALa,CACxB,CAAE9D,IAAK,EAAGC,KAAM,SAAUC,MAAO,UACjC,CAAEF,IAAK,EAAGC,KAAM,OAAQC,MAAO,SCIpB6D,MANe,CAC1B,CAAE/D,IAAK,EAAGC,KAAM,aAAcC,MAAO,cACrC,CAAEF,IAAK,EAAGC,KAAM,MAAOC,MAAO,OAC9B,CAAEF,IAAK,EAAGC,KAAM,SAAUC,MAAO,WC+MtB8D,MAhMIvB,IAEf,MAAOpB,EAAUC,GAAeqB,qBAAWlC,IACpCe,EAAOC,GAAYkB,qBAAW/B,IAC9Bc,EAAMC,GAAWgB,qBAAW9B,IAC5BiB,EAAMC,GAAWY,qBAAW5B,IAC5BiB,EAAYC,GAAiBU,qBAAW3B,IACxCkB,EAAgBC,GAAqBQ,qBAAW1B,IAChDW,EAAWC,GAAgBc,qBAAW7B,IAGvC,OAAEmD,GAAWC,cACbC,EAAe,IAAIC,gBAAgBH,GACnCI,EAAcF,EAAaG,IAAI,YAC/BC,EAAWJ,EAAaG,IAAI,SAC5BE,EAAUL,EAAaG,IAAI,QAC3BG,EAAUN,EAAaG,IAAI,QAC3BI,EAAgBP,EAAaG,IAAI,cACjCK,EAAoBR,EAAaG,IAAI,kBACrCM,EAAeT,EAAaG,IAAI,aAIlCD,GAAe/C,EAAY+C,GAC3BE,GAAY9C,EAAS8C,GACrBC,GAAW7C,EAAQ6C,GACnBC,GAAW1C,EAAQ0C,GACnBC,GAAiBzC,EAAcyC,GAC/BC,GAAqBxC,EAAkBwC,GACvCC,GAAgB/C,EAAa+C,GAGjC,MAAMC,EAAcA,CAAC3E,EAAO4E,EAAWC,KACnC,GAAKd,EAMA,GAAKE,EAAaa,IAAIF,IAGtB,GAAIX,EAAaa,IAAIF,IAAcX,EAAaG,IAAIQ,KAAe5E,EAAO,CAC3E,IAAI+E,EAAYH,EAAY,IAAMX,EAAaG,IAAIQ,GACnD,IAAII,EAAM,IAAIC,OAAOF,EAAW,KAChC,IAAIG,EAAUnB,EAAOjB,QAAQkC,EAAKJ,EAAY,IAAM5E,GACpDuC,EAAM4C,QAAQC,KAAK,CACfC,SAAU,IACVtB,OAAQmB,UARZ3C,EAAM4C,QAAQC,KAAKrB,EAAS,IAAMa,EAAY,IAAM5E,QANpDuC,EAAM4C,QAAQC,KAAK,CACfC,SAAU,IACVtB,OAAQa,EAAY,IAAM5E,IAelC6E,EAAa7E,IAYjB,OAPImB,GAAYwD,EAAYxD,EAAU,WAAYC,GAC9CE,GAASqD,EAAYrD,EAAO,QAASC,GACrCC,GAAQmD,EAAYnD,EAAM,OAAQC,GAClCG,GAAQ+C,EAAY/C,EAAM,OAAQC,GAClCC,GAAc6C,EAAY7C,EAAY,aAAcC,GACpDC,GAAkB2C,EAAY3C,EAAgB,iBAAkBC,GAGhEzB,IAAA0B,cAAA,WACI1B,IAAA0B,cAAA,YACI1B,IAAA0B,cAAA,aACI1B,IAAA0B,cAACoD,IAAQ,CACLtF,MAAOmB,EACPoE,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,WAAYoB,GAC7DqE,QAASvF,EACTwF,YAAY,kBACZC,WAAS,KAIA,QAAbxE,EACIX,IAAA0B,cAAA,aACI1B,IAAA0B,cAACoD,IAAQ,CACLtF,MAAOsB,EACPiE,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,QAASuB,GAC1DkE,QAAStF,EACTuF,YAAY,oBACZC,WAAS,KAGF,QAAbxE,EACEX,IAAA0B,cAAA,aACI1B,IAAA0B,cAACoD,IAAQ,CACLtF,MAAOsB,EACPiE,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,QAASuB,GAC1DkE,QAASrF,EACTsF,YAAY,oBACZC,WAAS,KAGF,SAAbxE,EACEX,IAAA0B,cAAA,aACI1B,IAAA0B,cAACoD,IAAQ,CACLtF,MAAOsB,EACPiE,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,QAASuB,GAC1DkE,QAASpF,EACTqF,YAAY,oBACZC,WAAS,KAIjBnF,IAAA0B,cAAA,aACI1B,IAAA0B,cAACoD,IAAQ,CAACI,YAAY,oBAAoB3B,QAAM,EAAC4B,WAAS,GACtDnF,IAAA0B,cAACoD,IAASM,KAAI,KACVpF,IAAA0B,cAAC2D,IAAO,CACJC,OAAK,EACLC,OAAO,QACPC,QAAQ,4BAMxCxF,IAAA0B,cAAA,aAEqB,QAAbf,EACIX,IAAA0B,cAACoD,IAAQ,CACLC,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,YAAa2B,GAC9D8D,QAASnF,EACToF,YAAY,mBACZC,WAAS,EACT3F,MAAO0B,IAGXlB,IAAA0B,cAACoD,IAAQ,CACLC,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,YAAa2B,GAC9D8D,QAAS7B,EACT8B,YAAY,mBACZC,WAAS,EACT3F,MAAO0B,KAKN,QAAbP,EACIX,IAAA0B,cAAA,aACI1B,IAAA0B,cAACoD,IAAQ,CACLtF,MAAOwB,EACP+D,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,OAAQyB,GACzDiE,YAAY,mBACZ3B,QAAM,EACN4B,WAAS,EACTF,QAAS5F,KAIjBW,IAAA0B,cAAA,aACI1B,IAAA0B,cAACoD,IAAQ,CACLtF,MAAOwB,EACP+D,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,OAAQyB,GACzDiE,YAAY,mBACZ3B,QAAM,EACN4B,WAAS,EACTF,QAASxF,KAIzBO,IAAA0B,cAAA,aACI1B,IAAA0B,cAACoD,IAAQ,CACLtF,MAAO4B,EACP2D,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,OAAQ6B,GACzD6D,YAAY,cACZ3B,QAAM,EACN4B,WAAS,EACTF,QAAS5B,KAGjBrD,IAAA0B,cAAA,aACkB,QAAbf,EAAqB,KAAqB,WAAdO,EACzBlB,IAAA0B,cAAC+D,IAAK,CAACjE,eAAgBA,EAAgBhC,MAAOgC,EAC1C0D,YAAY,mBAAmBH,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,iBAAkBiC,KACpG,MAEVzB,IAAA0B,cAAA,aACc,WAATN,EACGpB,IAAA0B,cAAC+D,IAAK,CAACnE,WAAYA,EAAY9B,MAAO8B,EAClC4D,YAAY,iBAAiBH,SAAUA,CAACC,EAAGxF,IAAU2E,EAAY3E,EAAMA,MAAO,aAAc+B,KAC9F,OAGdvB,IAAA0B,cAACI,EAAa,CAAChB,MAAOA,EAAOH,SAAUA,EAAUK,KAAMA,EAAMI,KAAMA,EAAMI,eAAgBA,EACrFF,WAAYA,MCjLboE,MApBf,SAAa3D,GAEX,IAAI4D,EAAWnC,cACf,MAIOoC,EAAUC,GAAehF,mBAJPiF,IACG,MAAtBH,EAASd,UAMf,OACE7E,IAAA0B,cAACqE,IAAI,CAACC,UAAQ,EAACC,WAAS,EAACC,OAAO,cAC9BlG,IAAA0B,cAAA,OAAKyE,MAAO,CAAEC,QAAS,gBACrBpG,IAAA0B,cAAA,UAAI,sBACJ1B,IAAA0B,cAAC2E,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,UAAWC,EAAmBC,SAAS,iBCVjDC,QACW,cAA7BC,OAAOjB,SAASkB,UAEe,UAA7BD,OAAOjB,SAASkB,UAEhBD,OAAOjB,SAASkB,SAASC,MACvB,2D,YCXNC,IAASC,OACPhH,IAAA0B,cAAC1B,IAAMiH,WAAU,KACfjH,IAAA0B,cAACwF,IAAM,CAACR,SAAS,WACf1G,IAAA0B,cAAClB,EAAK,KACJR,IAAA0B,cAACgE,EAAG,SAIVyB,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAKC,IACJA,EAAaC,eAEdC,MAAMrC,IACLsC,QAAQtC,MAAMA,EAAMuC,Y","file":"static/js/main.5722390d.chunk.js","sourcesContent":["const boltSizeOptionsSAE = [\n    { key: 0, text: \"#4\", value: '.112'},\n    { key: 1, text: '#6', value: '.138'},\n    { key: 2, text: '#8', value: '.164'},\n    { key: 3, text: '#10', value: '.19'},\n    { key: 4, text: '1/4 inch', value: '.25'},\n    { key: 5, text: '5/16 inch', value: '.3125' },\n    { key: 6, text: '3/8 inch', value: '.375' },\n    { key: 7, text: '7/16 inch', value: '.4375' },\n    { key: 8, text: '1/2 inch', value: '.5' },\n    { key: 9, text: '9/16 inch', value: '.5625' },\n    { key: 10, text: '5/8 inch', value: '.625' },\n    { key: 11, text: '3/4 inch', value: '.75' },\n    { key: 12, text: '7/8 inch', value: '.875' },\n    { key: 13, text: '1 inch', value: '1' },\n    { key: 14, text: '1 - 1/8 inches', value: '1.125' },\n    { key: 15, text: '1 - 1/4 inches', value: '1.25' },\n    { key: 16, text: '1 - 3/8 inches', value: '1.375' },\n    { key: 17, text: '1 - 1/2 inches', value: '1.5' },\n    { key: 18, text: '1 - 3/4 inches', value: '1.75' },\n    { key: 19, text: '2 inches', value: '2' },\n    { key: 20, text: '2 - 1/4 inches', value: '2.25' },\n    { key: 21, text: '2 - 1/2 inches', value: '2.5' },\n    { key: 22, text: '2 - 3/4 inches', value: '2.75' },\n    { key: 23, text: '3 inches', value: '3' },\n    { key: 24, text: '3 - 1/4 inches', value: '3.25' },\n    { key: 25, text: '3 - 1/2 inches', value: '3.5' },\n    { key: 26, text: '3 - 3/4 inches', value: '3.75' },\n    { key: 27, text: '4 inches', value: '4' },\n]\n\nexport default boltSizeOptionsSAE;","const boltSizeOptionsISO = [\n    { key: 0, text: 'M3.00', value: '3.0' },\n    { key: 1, text: 'M4.00', value: '4.0' },\n    { key: 2, text: 'M4.50', value: '4.5' },\n    { key: 3, text: 'M5.00', value: '5.0' },\n    { key: 4, text: 'M6.00', value: '6.0' }, \n    { key: 5, text: 'M8.00', value: '8.0' }, \n    { key: 6, text: 'M10.00', value: '10.0' }, \n    { key: 7, text: 'M12.00', value: '12.0' }, \n    { key: 8, text: 'M16.00', value: '16.0' }, \n    { key: 9, text: 'M20.00', value: '20.0' }, \n    { key: 10, text: 'M24.00', value: '24.0' }, \n    { key: 11, text: 'M30.00', value: '30.0' }, \n    { key: 12, text: 'M36.00', value: '36.0' },\n    { key: 13, text: 'M39.00', value: '39.0'} \n]\n\nexport default boltSizeOptionsISO;","const standardOptions = [\n    { key: 0, text: 'SAE J429', value: 'SAE' },\n    { key: 1, text: 'ISO', value: 'ISO'}\n]\n\nexport default standardOptions;","const boltOptionsSAE = [\n    { key: 0, text: 'Grade 2', value: 'grade2' },\n    { key: 1, text: 'Grade 5', value: 'grade5' },\n    { key: 2, text: 'Grade 7', value: 'grade7'},\n    { key: 3, text: 'Grade 8', value: 'grade8' },\n]\n\nexport default boltOptionsSAE;","const boltOptionsISO = [\n    { key: 0, text: 'Grade 3.6', value: 'grade3.6'},\n    { key: 1, text: 'Grade 4.6', value: 'grade4.6'}, \n    { key: 2, text: 'Grade 4.8', value: 'grade4.8'}, \n    { key: 3, text: 'Grade 5.6', value: 'grade5.6'}, \n    { key: 4, text: 'Grade 5.8', value: 'grade5.8'}, \n    { key: 5, text: 'Grade 6.8', value: 'grade6.8'}, \n    { key: 6, text: 'Grade 8.8', value: 'grade8.8' },\n    { key: 7, text: 'Grade 10.9', value: 'grade10.9' }, \n    { key: 8, text: 'Grade 12.9', value: 'grade12.9'}\n]\n\nexport default boltOptionsISO;","const boltOptionsASTM = [\n    { key: 0, text: 'A307', value: 'A307' },\n    { key: 1, text: 'A325 Type 1', value: 'A325 Type 1' }\n]\n\nexport default boltOptionsASTM;","const threadingOptions = [\n    { key: 0, text: 'Coarse', value: 'coarse' },\n    { key: 1, text: 'Fine', value: 'fine' },\n    { key: 2, text: 'Custom', value: 'custom'}\n]\n\nexport default threadingOptions;","import React, { useState } from 'react';\n\nexport const standardContext = React.createContext();\nexport const gradeContext = React.createContext();\nexport const sizeContext = React.createContext();\nexport const threadingContext = React.createContext();\nexport const lubeContext = React.createContext();\nexport const customLubeContext = React.createContext();\nexport const threadsPerInchContext = React.createContext();\n\nconst Store = ({ children }) => {\n    const [standard, setStandard] = useState(null);\n    const [grade, setGrade] = useState(null);\n    const [size, setSize] = useState(null);\n    const [threading, setThreading] = useState(null);\n    const [lube, setLube] = useState(null);\n    const [customLube, setCustomLube] = useState(null);\n    const [threadsPerInch, setThreadsPerInch] = useState(null);\n    return (\n        <standardContext.Provider value={[standard, setStandard]}>\n            <gradeContext.Provider value={[grade, setGrade]}>\n                <sizeContext.Provider value={[size, setSize]}>\n                    <threadingContext.Provider value={[threading, setThreading]}>\n                        <lubeContext.Provider value={[lube, setLube]}>\n                            <customLubeContext.Provider value={[customLube, setCustomLube]}>\n                                <threadsPerInchContext.Provider value={[threadsPerInch, setThreadsPerInch]}>\n                                    {children}\n                                </threadsPerInchContext.Provider>\n                            </customLubeContext.Provider>\n                        </lubeContext.Provider>\n                    </threadingContext.Provider>\n                </sizeContext.Provider>\n            </gradeContext.Provider>\n        </standardContext.Provider>\n    );\n};\n\nexport default Store;","const metricProofLoad = {\n    'coarse': {\n        'class': {\n            '3.6': {\n                'diameter': {\n                    '3.0': '910',\n                    '3.5': '1220',\n                    '4.0': '1580',\n                    '5.0': '2560',\n                    '6.0': '3620',\n                    '7.0': '5200',\n                    '8.0': '6590',\n                    '10.0': '10400',\n                    '12.0': '15200',\n                    '14.0': '20700',\n                    '16.0': '28300',\n                    '18.0': '34600',\n                    '20.0': '44100',\n                    '22.0': '54500',\n                    '24.0': '63500',\n                    '27.0': '82600',\n                    '30.0': '101000',\n                    '33.0': '125000',\n                    '36.0': '147000',\n                    '39.0': '176000'\n                }\n            },\n            '4.6': {\n                'diameter': {\n                    '3.0': '1130',\n                    '3.5': '1530',\n                    '4.0': '1980',\n                    '5.0': '3200',\n                    '6.0': '4520',\n                    '7.0': '6500',\n                    '8.0': '8240',\n                    '10.0': '13000',\n                    '12.0': '19000',\n                    '14.0': '25900',\n                    '16.0': '35300',\n                    '18.0': '43200',\n                    '20.0': '55100',\n                    '22.0': '68200',\n                    '24.0': '79400',\n                    '27.0': '103000',\n                    '30.0': '126000',\n                    '33.0': '156000',\n                    '36.0': '184000',\n                    '39.0': '220000'\n                }\n            },\n            '4.8': {\n                'diameter': {\n                    '3.0': '1560',\n                    '3.5': '2100',\n                    '4.0': '2770',\n                    '5.0': '4400',\n                    '6.0': '6230',\n                    '7.0': '8920',\n                    '8.0': '11400',\n                    '10.0': '18000',\n                    '12.0': '26100',\n                    '14.0': '35600',\n                    '16.0': '48700',\n                    '18.0': '59500',\n                    '20.0': '76000',\n                    '22.0': '93900',\n                    '24.0': '109000',\n                    '27.0': '142000',\n                    '30.0': '174000',\n                    '33.0': '215000',\n                    '36.0': '253000',\n                    '39.0': '303000'\n                }\n            },\n            '5.6': {\n                'diameter': {\n                    '3.0': '1410',\n                    '3.5': '1900',\n                    '4.0': '2460',\n                    '5.0': '3980',\n                    '6.0': '5630',\n                    '7.0': '8090',\n                    '8.0': '10200',\n                    '10.0': '16200',\n                    '12.0': '23600',\n                    '14.0': '32200',\n                    '16.0': '44000',\n                    '18.0': '53800',\n                    '20.0': '68600',\n                    '22.0': '84800',\n                    '24.0': '98800',\n                    '27.0': '128000',\n                    '30.0': '157000',\n                    '33.0': '194000',\n                    '36.0': '229000',\n                    '39.0': '273000'\n                }\n            },\n            '5.8': {\n                'diameter': {\n                    '3.0': '1910',\n                    '3.5': '2580',\n                    '4.0': '3340',\n                    '5.0': '5400',\n                    '6.0': '7640',\n                    '7.0': '11000',\n                    '8.0': '13900',\n                    '10.0': '22000',\n                    '12.0': '32000',\n                    '14.0': '43700',\n                    '16.0': '59700',\n                    '18.0': '73000',\n                    '20.0': '93100',\n                    '22.0': '115000',\n                    '24.0': '134000',\n                    '27.0': '174000',\n                    '30.0': '213000',\n                    '33.0': '264000',\n                    '36.0': '310000',\n                    '39.0': '371000'\n                }\n            },\n            '6.8': {\n                'diameter': {\n                    '3.0': '2210',\n                    '3.5': '2980',\n                    '4.0': '3860',\n                    '5.0': '6250',\n                    '6.0': '8840',\n                    '7.0': '12700',\n                    '8.0': '16100',\n                    '10.0': '25500',\n                    '12.0': '37100',\n                    '14.0': '50600',\n                    '16.0': '69100',\n                    '18.0': '84500',\n                    '20.0': '108000',\n                    '22.0': '133000',\n                    '24.0': '155000',\n                    '27.0': '202000',\n                    '30.0': '247000',\n                    '33.0': '305000',\n                    '36.0': '359000',\n                    '39.0': '429000'\n                },\n            },\n            '8.8': {\n                'diameter': {\n                    '3.0': '2920',\n                    '3.5': '3940',\n                    '4.0': '5100',\n                    '5.0': '8230',\n                    '6.0': '11600',\n                    '7.0': '16800',\n                    '8.0': '21200',\n                    '10.0': '33700',\n                    '12.0': '48900',\n                    '14.0': '66700',\n                    '16.0': '91000',\n                    '18.0': '11500',\n                    '20.0': '147000',\n                    '22.0': '182000',\n                    '24.0': '212000',\n                    '27.0': '275000',\n                    '30.0': '337000',\n                    '33.0': '416000',\n                    '36.0': '490000',\n                    '39.0': '586000',\n                }\n            },\n            '9.8': {\n                'diameter': {\n                    '3.0': '3270',\n                    '3.5': '4410',\n                    '4.0': '5710',\n                    '5.0': '9230',\n                    '6.0': '13100',\n                    '7.0': '18800',\n                    '8.0': '23800',\n                    '10.0': '37700',\n                    '12.0': '54800',\n                    '14.0': '74800',\n                    '16.0': '102000'\n\n                }\n            },\n            '10.9': {\n                'diameter': {\n                    '3.0': '4180',\n                    '3.5': '5630',\n                    '4.0': '7290',\n                    '5.0': '11800',\n                    '6.0': '16700',\n                    '7.0': '24000',\n                    '8.0': '30400',\n                    '10.0': '48100',\n                    '12.0': '70000',\n                    '14.0': '95500',\n                    '16.0': '130000',\n                    '18.0': '159000',\n                    '20.0': '203000',\n                    '22.0': '252000',\n                    '24.0': '293000',\n                    '27.0': '381000',\n                    '30.0': '466000',\n                    '33.0': '570000',\n                    '36.0': '678000',\n                    '39.0': '810000',\n                }\n            },\n            '12.9': {\n                'diameter': {\n                    '3.0': '4880',\n                    '3.5': '6580',\n                    '4.0': '8520',\n                    '5.0': '13800',\n                    '6.0': '19500',\n                    '7.0': '28000',\n                    '8.0': '35500',\n                    '10.0': '56300',\n                    '12.0': '81800',\n                    '14.0': '112000',\n                    '16.0': '152000',\n                    '18.0': '186000',\n                    '20.0': '238000',\n                    '22.0': '294000',\n                    '24.0': '342000',\n                    '27.0': '445000',\n                    '30.0': '544000',\n                    '33.0': '673000',\n                    '36.0': '792000',\n                    '39.0': '947000',\n                }\n            }\n        }\n    },\n    'fine': {\n        'class': {\n            '4.6': {\n                'diameter': {\n                    '8.0': '8820',\n                    '10.0': '13800',\n                    '12.0': '19800',\n                    '14.0': '28100',\n                    '16.0': '27600',\n                    '18.0': '48600',\n                    '20.0': '61200',\n                    '22.0': '74900',\n                    '24.0': '86400',\n                    '27.0': '112000',\n                    '30.0': '140000',\n                    '33.0': '171000',\n                    '36.0': '195000',\n                    '39.0': '232000'\n                }\n            },\n            '4.8': {\n                'diameter': {\n                    '8.0': '12200',\n                    '10.0': '19000',\n                    '12.0': '27300',\n                    '14.0': '38800',\n                    '16.0': '51800',\n                    '18.0': '67000',\n                    '20.0': '84300',\n                    '22.0': '103000',\n                    '24.0': '119000',\n                    '27.0': '154000',\n                    '30.0': '192000',\n                    '33.0': '236000',\n                    '36.0': '268000',\n                    '39.0': '319000'\n                }\n            },\n            '5.6': {\n                'diameter': {\n                    '8.0': '11000',\n                    '10.0': '17100',\n                    '12.0': '24700',\n                    '14.0': '35000',\n                    '16.0': '46800',\n                    '18.0': '60500',\n                    '20.0': '76200',\n                    '22.0': '93200',\n                    '24.0': '108000',\n                    '27.0': '139000',\n                    '30.0': '171000',\n                    '33.0': '213000',\n                    '36.0': '242000',\n                    '39.0': '288000'\n                }\n            },\n            '5.8': {\n                'diameter': {\n                    '8.0': '14900',\n                    '10.0': '23300',\n                    '12.0': '33500',\n                    '14.0': '47500',\n                    '16.0': '63500',\n                    '18.0': '82100',\n                    '20.0': '103000',\n                    '22.0': '126000',\n                    '24.0': '146000',\n                    '27.0': '188000',\n                    '30.0': '236000',\n                    '33.0': '289000',\n                    '36.0': '329000',\n                    '39.0': '391000'\n                }\n            },\n            '6.8': {\n                'diameter': {\n                    '8.0': '17200',\n                    '10.0': '26900',\n                    '12.0': '38800',\n                    '14.0': '55000',\n                    '16.0': '73500',\n                    '18.0': '95000',\n                    '20.0': '120000',\n                    '22.0': '146000',\n                    '24.0': '169000',\n                    '27.0': '218000',\n                    '30.0': '273000',\n                    '33.0': '335000',\n                    '36.0': '381000',\n                    '39.0': '453000'\n                },\n            },\n            '8.8': {\n                'diameter': {\n                    '8.0': '22700',\n                    '10.0': '33500',\n                    '12.0': '51100',\n                    '14.0': '72500',\n                    '16.0': '96900',\n                    '18.0': '130000',\n                    '20.0': '163000',\n                    '22.0': '200000',\n                    '24.0': '230000',\n                    '27.0': '298000',\n                    '30.0': '373000',\n                    '33.0': '457000',\n                    '36.0': '519000',\n                    '39.0': '618000',\n                }\n            },\n            '9.8': {\n                'diameter': {\n                    '8.0': '25500',\n                    '10.0': '39800',\n                    '12.0': '57300',\n                    '14.0': '81200',\n                    '16.0': '109000'\n\n                }\n            },\n            '10.9': {\n                'diameter': {\n                    '8.0': '32500',\n                    '10.0': '50800',\n                    '12.0': '73100',\n                    '14.0': '104000',\n                    '16.0': '139000',\n                    '18.0': '179000',\n                    '20.0': '226000',\n                    '22.0': '276000',\n                    '24.0': '319000',\n                    '27.0': '412000',\n                    '30.0': '515000',\n                    '33.0': '632000',\n                    '36.0': '718000',\n                    '39.0': '855000',\n                }\n            },\n            '12.9': {\n                'diameter': {\n                    '8.0': '38000',\n                    '10.0': '59400',\n                    '12.0': '85500',\n                    '14.0': '121000',\n                    '16.0': '162000',\n                    '18.0': '210000',\n                    '20.0': '264000',\n                    '22.0': '323000',\n                    '24.0': '372000',\n                    '27.0': '481000',\n                    '30.0': '602000',\n                    '33.0': '738000',\n                    '36.0': '838000',\n                    '39.0': '999000',\n                }\n            }\n        }\n    }\n}\n\n\n\n\nexport default metricProofLoad;","const tpiValues = {\n    'coarse': {\n        '.112': 40,\n        '.125': 40,\n        '.138': 32,\n        '.164': 32,\n        '.19': 24,\n        '.25': 20,\n        '.3125': 18,\n        '.375': 16,\n        '.4375': 14,\n        '.5': 13,\n        '.5625': 12,\n        '.625': 11,\n        '.75': 10,\n        '.875': 9,\n        '1': 8,\n        '1.125': 7,\n        '1.25': 7,\n        '1.375': 6,\n        '1.5': 6,\n        '1.75': 5,\n        '2': 4.5,\n        '2.25': 4.25,\n        '2.5': 4, \n        '2.75': 4,\n        '3': 4, \n        '3.25': 4, \n        '3.5': 4, \n        '3.75': 4, \n        '4': 4\n    },\n    'fine': {\n        '.112': 48,\n        '.125': 44,\n        '.138': 40,\n        '.164': 36,\n        '.19': 32,\n        '.25': 28,\n        '.3125': 24,\n        '.375': 24,\n        '.4375': 20,\n        '.5': 20,\n        '.5625': 18,\n        '.625': 18,\n        '.75': 16,\n        '.875': 14,\n        '1': 12,\n        '1.125': 12,\n        '1.25': 12,\n        '1.375': 12,\n        '1.5': 12,\n    }\n}\n\nexport default tpiValues;","import React, { useContext } from 'react';\nimport threadPitchValues from '../Static/threadPitchValues';\nimport metricProofLoad from '../Static/metricProofLoad';\nimport tpiValues from '../Static/tpiValues';\nimport {\n    standardContext, gradeContext, sizeContext, threadingContext\n} from './Store';\nimport '../App.css';\n\nconst ResultCompAdv = (props) => {\n    let result = null;\n    // Context API / hooks store and variables. \n    const [standard] = useContext(standardContext);\n    const [size] = useContext(sizeContext);\n    const [grade] = useContext(gradeContext);\n    const [threading] = useContext(threadingContext);\n\n    const newtonToLbs = (nval) => {\n        return nval * 0.2248;\n    }\n    const mmToIn = (mmValue) => {\n        return mmValue * 0.0393701;\n    }\n\n    // This is correct and working. \n    const threadTensileStress = () => {\n        let retValue = null;\n        if (standard === 'SAE') {\n            if (threading && threading != 'custom') {\n                retValue = (Math.PI / 4) * Math.pow((parseFloat(props.size) - (0.938194 * (1 / parseFloat(tpiValues[threading][size])))), 2)\n            }\n            else {\n                retValue = (Math.PI / 4) * Math.pow((parseFloat(props.size) - (0.938194 * (1 / parseFloat(props.threadsPerInch)))), 2)\n            }\n        }\n        // This doesn't even do anything lol. \n        /*if (standard === 'ISO' && threading) {\n            console.log(\"Thread Tensile Stress: \" + ((Math.PI / 4) * Math.pow((size - (0.9382 * threadPitchValues[threading][size])), 2)))\n            retValue = ((Math.PI / 4) * Math.pow((size - (0.9382 * threadPitchValues[threading][size])), 2))\n        }\n        */\n        return retValue;\n    }\n\n    const calcClampForce = () => {\n        let proofLoad = null;\n        if (standard === 'SAE') {\n            if (grade === 'grade2') {\n                parseFloat(props.size) < .875 ? proofLoad = 55000 : proofLoad = 33000;\n            }\n            else if (grade === 'grade5') {\n                parseFloat(props.size) < 1.5 ? proofLoad = 85000 : proofLoad = 74000;\n            }\n            else if (grade === 'grade7') {\n                proofLoad = 105000;\n            }\n            else {\n                proofLoad = 120000;\n            }\n        }\n        else {\n            // Regex to remove 'grade' before grade value.  \n            let grade_num = props.grade.replace('grade', '');\n            if(metricProofLoad && metricProofLoad[threading] && metricProofLoad[threading].class[grade_num]){\n                proofLoad = newtonToLbs(metricProofLoad[threading].class[grade_num].diameter[size])\n            }\n        }\n        if (props.standard === \"SAE\") { return (.75 * proofLoad * threadTensileStress()); }\n        else return .75 * proofLoad;\n    }\n    const calcTorque = () => {\n        let K = null;\n        let D = null;\n        let F = calcClampForce();\n        props.lube === 'Lubricated' ? K = 0.15 : props.lube === 'Dry' ? K = 0.20 : K = props.customLube;\n        D = parseFloat(props.size);\n        if (props.standard === \"SAE\") { return (K * D * F) } else return mmToIn(K * D * F);\n    }\n    if (props.size) {\n        result = calcTorque();\n    }\n    return (\n        <div class=\"top-space\">\n            {result != null ? <h3>Recommended Bolt Torque: {isNaN(result) ? \"Input incorrect/incomplete or our dataset is too small, try custom values.\"\n                : Math.round(result * 1000) / 1000 + \" inch-lbs\" + \" / \" + Math.round((result / 12) * 1000) / 1000 + \" foot-lbs\"}</h3> : <p></p>}\n            <p>Notes: This is a reference calculator, do not rely on this alone, as variables may differ from\n                manufacturer to manufacturer, real world conditions, etc. <br /> Basic is based on various charts from manufacturers,\n                advanced uses calculations like T = KDF, etc. It also allows more user input. <br /> Lubricated: K=0.15, Dry: K=0.20 </p>\n        </div>\n    );\n\n}\n\nexport default ResultCompAdv;","const threadingOptionsISO = [\n    { key: 0, text: 'Coarse', value: 'coarse' },\n    { key: 1, text: 'Fine', value: 'fine' },\n]\n\nexport default threadingOptionsISO;","const lubricationOptionsAdv = [\n    { key: 0, text: 'Lubricated', value: 'Lubricated' },\n    { key: 1, text: 'Dry', value: 'Dry' },\n    { key: 2, text: 'Custom', value: 'Custom'}\n]\n\nexport default lubricationOptionsAdv;","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Dropdown, Message, Input } from 'semantic-ui-react';\nimport ResultCompAdv from './ResultCompAdv';\nimport boltSizeOptionsSAE from '../Static/boltSizeOptionsSAE';\nimport boltSizeOptionsISO from '../Static/boltSizeOptionsISO';\nimport standardOptions from '../Static/standardOptions';\nimport boltOptionsSAE from '../Static/boltOptionsSAE';\nimport boltOptionsISO from '../Static/boltOptionsISO';\nimport boltOptionsASTM from '../Static/boltOptionsASTM';\nimport threadingOptions from '../Static/threadingOptions';\nimport threadingOptionsISO from '../Static/threadingOptionsISO';\nimport lubricationOptionsAdv from '../Static/lubricationOptionsAdv';\nimport {\n    standardContext, gradeContext, sizeContext,\n    lubeContext, customLubeContext, threadsPerInchContext, threadingContext\n} from './Store';\n\nconst UserInput = (props) => {\n    // Context API / hooks store and variables. \n    const [standard, setStandard] = useContext(standardContext);\n    const [grade, setGrade] = useContext(gradeContext);\n    const [size, setSize] = useContext(sizeContext);\n    const [lube, setLube] = useContext(lubeContext);\n    const [customLube, setCustomLube] = useContext(customLubeContext);\n    const [threadsPerInch, setThreadsPerInch] = useContext(threadsPerInchContext);\n    const [threading, setThreading] = useContext(threadingContext);\n\n    // Setting up query string searching. \n    const { search } = useLocation()\n    const searchParams = new URLSearchParams(search);\n    const standardURL = searchParams.get('standard');\n    const gradeURL = searchParams.get('grade');\n    const sizeURL = searchParams.get('size');\n    const lubeURL = searchParams.get('lube');\n    const customLubeURL = searchParams.get('customLube');\n    const threadsPerInchURL = searchParams.get('threadsPerInch');\n    const threadingURL = searchParams.get('threading');\n\n\n    // If query string exists, set those variables in the store. \n    if (standardURL) { setStandard(standardURL) };\n    if (gradeURL) { setGrade(gradeURL) };\n    if (sizeURL) { setSize(sizeURL) };\n    if (lubeURL) { setLube(lubeURL) };\n    if (customLubeURL) { setCustomLube(customLubeURL) };\n    if (threadsPerInchURL) { setThreadsPerInch(threadsPerInchURL) };\n    if (threadingURL) { setThreading(threadingURL) };\n\n    // Function for updating the query string. \n    const updateQuery = (value, queryName, updateMethod) => {\n        if (!search) {\n            props.history.push({\n                pathname: '/',\n                search: queryName + '=' + value\n            })\n        }\n        else if (!searchParams.has(queryName)) {\n            props.history.push(search + '&' + queryName + '=' + value)\n        }\n        else if (searchParams.has(queryName) && searchParams.get(queryName) !== value) {\n            let replaceMe = queryName + '=' + searchParams.get(queryName);\n            var reg = new RegExp(replaceMe, \"g\");\n            let qString = search.replace(reg, queryName + '=' + value);\n            props.history.push({\n                pathname: '/',\n                search: qString\n            })\n        }\n        updateMethod(value);\n    }\n\n    // If values are already in the store, update the query string with \n    // said values. \n    if (standard) { updateQuery(standard, 'standard', setStandard) };\n    if (grade) { updateQuery(grade, 'grade', setGrade) };\n    if (size) { updateQuery(size, 'size', setSize) };\n    if (lube) { updateQuery(lube, 'lube', setLube) };\n    if (customLube) { updateQuery(customLube, 'customLube', setCustomLube) }\n    if (threadsPerInch) { updateQuery(threadsPerInch, 'threadsPerInch', setThreadsPerInch) };\n\n    return (\n        <div>\n            <form>\n                <label>\n                    <Dropdown\n                        value={standard}\n                        onChange={(e, value) => updateQuery(value.value, 'standard', setStandard)}\n                        options={standardOptions}\n                        placeholder='Select Standard'\n                        selection\n                    />\n                </label>\n                {\n                    standard === \"SAE\" ?\n                        <label>\n                            <Dropdown\n                                value={grade}\n                                onChange={(e, value) => updateQuery(value.value, 'grade', setGrade)}\n                                options={boltOptionsSAE}\n                                placeholder='Select Bolt Grade'\n                                selection\n                            />\n                        </label>\n                        : standard === \"ISO\" ?\n                            <label>\n                                <Dropdown\n                                    value={grade}\n                                    onChange={(e, value) => updateQuery(value.value, 'grade', setGrade)}\n                                    options={boltOptionsISO}\n                                    placeholder='Select Bolt Grade'\n                                    selection\n                                />\n                            </label>\n                            : standard === \"ASTM\" ?\n                                <label>\n                                    <Dropdown\n                                        value={grade}\n                                        onChange={(e, value) => updateQuery(value.value, 'grade', setGrade)}\n                                        options={boltOptionsASTM}\n                                        placeholder='Select Bolt Grade'\n                                        selection\n                                    />\n                                </label>\n                                :\n                                <label>\n                                    <Dropdown placeholder='Select Bolt Grade' search selection>\n                                        <Dropdown.Menu>\n                                            <Message\n                                                error\n                                                header='Error'\n                                                content='Select Bolt Standard'\n                                            />\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </label>\n                }\n                <label>\n                    {\n                        standard === 'SAE' ?\n                            <Dropdown\n                                onChange={(e, value) => updateQuery(value.value, 'threading', setThreading)}\n                                options={threadingOptions}\n                                placeholder='Select Threading'\n                                selection\n                                value={threading}\n                            />\n                            :\n                            <Dropdown\n                                onChange={(e, value) => updateQuery(value.value, 'threading', setThreading)}\n                                options={threadingOptionsISO}\n                                placeholder='Select Threading'\n                                selection\n                                value={threading}\n                            />\n                    }\n                </label>\n                {\n                    standard === 'SAE' ?\n                        <label>\n                            <Dropdown\n                                value={size}\n                                onChange={(e, value) => updateQuery(value.value, 'size', setSize)}\n                                placeholder='Select Bolt Size'\n                                search\n                                selection\n                                options={boltSizeOptionsSAE}\n                            />\n                        </label>\n                        :\n                        <label>\n                            <Dropdown\n                                value={size}\n                                onChange={(e, value) => updateQuery(value.value, 'size', setSize)}\n                                placeholder='Select Bolt Size'\n                                search\n                                selection\n                                options={boltSizeOptionsISO}\n                            />\n                        </label>\n                }\n                <label>\n                    <Dropdown\n                        value={lube}\n                        onChange={(e, value) => updateQuery(value.value, 'lube', setLube)}\n                        placeholder='Lubricated?'\n                        search\n                        selection\n                        options={lubricationOptionsAdv}\n                    />\n                </label>\n                <label>\n                    {standard === 'ISO' ? null : threading === \"custom\" ?\n                        <Input threadsPerInch={threadsPerInch} value={threadsPerInch}\n                            placeholder='Threads Per Inch' onChange={(e, value) => updateQuery(value.value, 'threadsPerInch', setThreadsPerInch)} />\n                        : null}\n                </label>\n                <label>\n                    {lube === 'Custom' ?\n                        <Input customLube={customLube} value={customLube}\n                            placeholder='Custom K Value' onChange={(e, value) => updateQuery(value.value, 'customLube', setCustomLube)} />\n                        : null}\n                </label>\n            </form>\n            <ResultCompAdv grade={grade} standard={standard} size={size} lube={lube} threadsPerInch={threadsPerInch}\n                customLube={customLube} />\n        </div>\n    )\n}\n\nexport default UserInput;","import React, { useState } from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button, Grid } from 'semantic-ui-react';\nimport UserInput from './Components/UserInput';\nimport UserInputAdvanced from './Components/UserInputAdvanced';\nimport { Link, Route, useLocation } from \"react-router-dom\";\n\nfunction App(props) {\n\n  let location = useLocation();\n  const returnInitialURL = () => {\n    if (location.pathname === \"/\") { return false } else return true;\n  }\n\n  const [advanced, setAdvanced] = useState(returnInitialURL);\n\n  let handleClick = () => { setAdvanced(!advanced) }\n  return (\n    <Grid centered container padded=\"vertically\">\n      <div style={{ padding: \"250px 0 0 0\" }}>\n        <h1>Torque Calculator </h1>\n        <Route exact path=\"/\" component={UserInputAdvanced} basename=\"/hn-clone\" />\n      </div>\n    </Grid>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Store from './Components/Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/torque\">\n      <Store>\n        <App />\n      </Store>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}